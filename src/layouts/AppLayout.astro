---
import { UserRole, type UsersSelect } from "../schemas/user";
import BaseLayout from "./BaseLayout.astro";
import Button from "../components/Button.svelte";
export interface Props {
	class?: string;
	userData?: UsersSelect;
	minimumRole: UserRole;
	id?: string;
}
const { class: className, id } = Astro.props;
let { userData } = Astro.props;
---

<BaseLayout class={className} {id}>
	<div class="h-3"></div>
	<div class="flex flex-col md:flex-row md:w-main place-content-center">
		<h1 class="text-4xl md:text-5xl font-bold text-center flex justify-center">
			<a href="/" class="flex gap-1 items-center"
				><img
					src="/potomac.svg"
					class="aspect-square h-12 rounded-full bg-secondary"
				/>Vote! Potomac</a
			>
		</h1>
		<div class="flex flex-row gap-2 place-items-center lt-md:m-auto">
			<Button type="tertiary" icon="i-ic:outline-plus" href="/submit">
				New
			</Button>
			{
				userData ? (
					<details class="dropdown dropdown-end dropdown-bottom">
						<summary class="m-1 btn btn-circle p-1">
							<img
								src={userData.picture}
								alt="profile"
								class="rounded-full"
								referrerpolicy="no-referrer"
							/>
						</summary>
						<ul class="p-3 shadow menu dropdown-content z-1 bg-base-100 rounded-box flex gap-3">
							<li class="px-3 text-center font-bold">
								{userData.email.toUpperCase()}
							</li>
							{userData.role >= 10 && (
								<li>
									<Button
										href="/admin"
										type="borderless"
										class="place-content-center"
									>
										Admin Dashboard
									</Button>
								</li>
							)}
							<li>
								<Button
									href="/api/auth/signout"
									type="borderless"
									class="place-content-center"
								>
									Sign out
								</Button>
							</li>
						</ul>
					</details>
				) : (
					<Button type="tertiary" href="/api/auth/signin">
						Sign in
					</Button>
				)
			}
		</div>
	</div>
	<slot />
</BaseLayout>
