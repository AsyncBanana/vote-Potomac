---
import Button from "../../components/Button.svelte";
import Suggestion from "../../components/Suggestion.astro";
import AppLayout from "../../layouts/AppLayout.astro";
import { eq } from "drizzle-orm";
import { verifyJWT } from "../../modules/auth";
import { Suggestions } from "../../schemas/suggestion";
import { Users } from "../../schemas/user";
import { extractDendrite } from "../../modules/dendrite";
const id = Astro.params.suggestionId;
export const prerender = false;
let userId;
const authData = Astro.cookies.get("authData")?.value;
if (!id) return new Response("Not found", { status: 404 });
if (authData) {
	userId = await verifyJWT(authData);
}
const [[suggestion], userData] = await Astro.locals.db.batch([
	Astro.locals.db.select().from(Suggestions).where(eq(Suggestions.id, +id)),
	...(id
		? [
				Astro.locals.db
					.select()
					.from(Users)
					.where(eq(Users.id, id || "")),
		  ]
		: []), // the lengths I go to avoid naming things
]);
if (!suggestion) {
	return new Response("Not found", {
		status: 404,
	});
}
const res = await Astro.locals.handle(
	userData ? { userData: userData[0] } : {},
);
if (res.type === "error") return res.data;
---

<AppLayout {...res.data} class="w-main" id={`suggestion-${suggestion.id}`}>
	<header class="flex flex-row gap-3 grow items-stretch">
		<Button
			type="tertiary"
			class="h-auto"
			icon="i-bx:upvote"
			id="vote"
			vertical
		>
			{suggestion.votes?.length || 0}
		</Button>
		<div>
			<h1 class="text-3xl font-bold text-balance">
				{suggestion.title}
			</h1>
			<div class="text-sm text-neutral-content font-medium">
				Created {
					extractDendrite(+id).toLocaleString(undefined, {
						dateStyle: "short",
						timeZone: "UTC",
					})
				}
			</div>
		</div>
	</header>
	<main class="text-lg leading-loose" set:html={suggestion.description} />
	<h1 class="text-2xl font-bold mt-6">More suggestions</h1>
	<div>
		<Suggestion
			title="Introduce a breakfast option at school"
			votes={1}
			id={135315039}
		/>
	</div>
</AppLayout>
<script>
	document.getElementById("vote")?.addEventListener("click", async () => {
		await fetch("/api/suggestion/vote", {
			method: "POST",
			body: document.querySelector("body")?.id.split("-")[1],
		});
	});
</script>
