---
import Button from "../../components/Button.svelte";
import AdminLayout from "../../layouts/AdminLayout.astro";
import { UserRole, UserRoleMaps, Users } from "../../schemas/user";
import { desc } from "drizzle-orm";
const res = await Astro.locals.handle({
	minimumRole: 10,
});
if (res.type === "error") return res.data;
const users = await Astro.locals.db
	.select({
		email: Users.email,
		id: Users.id,
		picture: Users.picture,
		name: Users.name,
		role: Users.role,
	})
	.from(Users)
	.orderBy(desc(Users.role))
	.limit(30)
	.all();
---

<AdminLayout {...res.data} currentRoute="Users">
	<table class="table w-full">
		<thead>
			<tr>
				<th>User</th>
				<th>Role</th>
			</tr>
		</thead>
		<tbody>
			{
				users.map((user) => (
					<tr id={`user-${user.id}`}>
						<td class="flex flex-row w-full gap-3">
							<img
								referrerpolicy="no-referrer"
								src={user.picture}
								class="w-12 h-12 aspect-square rounded-md b-2 b-base-200"
							/>
							<div class="flex flex-col">
								<span class="font-bold">{user.name}</span>
								<span class="text-neutral-content text-sm font-medium">
									{user.email}
								</span>
							</div>
						</td>
						<td>
							<select class="select select-bordered w-full roleChange">
								{Object.entries(UserRoleMaps).map(
									([roleNumber, roleName]) =>
										+roleNumber !== UserRole.unauthenticated && (
											<option selected={user.role === +roleNumber}>
												{roleName}
											</option>
										),
								)}
							</select>
						</td>
					</tr>
				))
			}
		</tbody>
	</table>
</AdminLayout>
<script>
	import { UserRoleMaps } from "../../schemas/user";
	const roleChangeSelects = document.querySelectorAll(
		".roleChange",
	) as unknown as NodeListOf<HTMLSelectElement>;
	roleChangeSelects.forEach((select) => {
		select.addEventListener("change", async () => {
			await fetch("/api/user/role", {
				method: "POST",
				body: JSON.stringify({
					user: select.parentElement?.parentElement?.id.split("-")[1],
					role: Object.keys(UserRoleMaps).find(
						// @ts-expect-error
						(key) => UserRoleMaps[key] === select.value,
					),
				}),
			});
		});
	});
</script>
